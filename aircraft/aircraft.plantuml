@startuml

title __AIRCRAFT's Class Diagram__\n

  namespace com.example.aircraftwar {
    namespace JavaCode.edu.hitsz {
      namespace aircraft {
        abstract class com.example.aircraftwar.JavaCode.edu.hitsz.aircraft.AbstractAircraft {
            # hp : int
            # maxHp : int
            + AbstractAircraft()
            {abstract} + changeShootNum()
            + decreaseHp()
            + getAcIndex()
            + getHp()
            + increaseHp()
            {abstract} + shoot()
        }
      }
    }
  }
  

  namespace com.example.aircraftwar {
    namespace JavaCode.edu.hitsz {
      namespace aircraft {
        class com.example.aircraftwar.JavaCode.edu.hitsz.aircraft.HeroAircraft {
            + EnemyIndex : int
            - direction : int
            {static} - instance : HeroAircraft
            - power : int
            - shootNum : int
            + addShootNum()
            + changeShootNum()
            + forward()
            + getAcIndex()
            {static} + getInstance()
            + shoot()
            - HeroAircraft()
        }
      }
    }
  }
  

  com.example.aircraftwar.JavaCode.edu.hitsz.aircraft.AbstractAircraft -up-|> com.example.aircraftwar.JavaCode.edu.hitsz.basic.AbstractFlyingObject
  com.example.aircraftwar.JavaCode.edu.hitsz.aircraft.HeroAircraft -up-|> com.example.aircraftwar.JavaCode.edu.hitsz.aircraft.AbstractAircraft


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
